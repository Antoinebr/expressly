name: CI

on:
  - workflow_dispatch
  - pull_request
  - push

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    name: expressly
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.AUTO_GH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Node modules cache
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-expressly-${{ secrets.cache_key_epoch_time }}-${{ hashFiles('yarn.lock') }}
      - name: Compile expressly
        run: yarn build
      - name: Publish
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          git fetch origin 'refs/tags/*:refs/tags/*'
          yarn auto shipit

  build-docs:
    name: Docs
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Node modules cache
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-expressly-docs-${{ secrets.cache_key_epoch_time }}-${{ hashFiles('yarn.lock') }}
      - name: Compile docs
        run: yarn build
      - name: Install Rust toolchain
        if: ${{ github.ref_name == 'main' }}
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: wasm32-wasi
      - name: Deploy docs to Compute@Edge
        if: ${{ github.ref_name == 'main' }}
        uses: fastly/compute-actions@main
        with:
          project_directory: ./docs/static-host
        env:
          FASTLY_API_TOKEN: ${{ secrets.FASTLY_API_TOKEN }}
      - name: Purge expressly.edgecompute.app
        if: ${{ github.ref_name == 'main' }}
        env:
          FASTLY_API_TOKEN: ${{ secrets.FASTLY_API_TOKEN }}
        run: |
          curl -s -H "Fastly-Key: $FASTLY_API_TOKEN" -X POST "https://api.fastly.com/service/44O0OSuWrOWkzVek5Gg4QN/purge_all"
        