name: CI

on:
  - workflow_dispatch
  - pull_request
  - push

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.AUTO_GH_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Node modules cache
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-expressly-${{ secrets.cache_key_epoch_time }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-expressly-${{ secrets.cache_key_epoch_time }}-
      - name: Compile expressly
        run: yarn build

  ship:
    needs: build
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Auto
        run: |
          git fetch origin 'refs/tags/*:refs/tags/*'
          yarn auto shipit

  build-docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn
      - name: Install dependencies
        run: |
          cd docs
          yarn install --frozen-lockfile --prefer-offline
      - name: Node modules cache
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-expressly-docs-${{ secrets.cache_key_epoch_time }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-expressly-docs-${{ secrets.cache_key_epoch_time }}-
      - name: Compile docs
        run: yarn build